{"is_source_file": true, "format": "JavaScript (React JSX)", "description": "This file defines a React functional component named 'NoteEditor', which provides a form interface for creating or editing notes. It manages internal state for note title and content, and handles form submission and cancellation.", "external_files": ["react"], "external_methods": ["React.useState"], "published": ["NoteEditor"], "classes": [], "methods": [{"name": "NoteEditor({ initialData = {}, onSave, onCancel, mode = \"edit\" })", "description": "React functional component rendering a form to create or update a note, with internal state management for title and content, and callbacks for save and cancel actions.", "scope": "", "scopeKind": ""}], "calls": ["React.useState", "onSave", "onCancel"], "search-terms": ["NoteEditor", "React", "useState", "note editor", "create note", "edit note", "form", "note input", "textarea"], "state": 2, "file_id": 17, "knowledge_revision": 35, "git_revision": "", "ctags": [{"_type": "tag", "name": "80", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-e77cf41c/notes_frontend/src/components/NoteEditor.js", "pattern": "/^          maxLength={80}$/", "language": "JavaScript", "kind": "field", "scope": "NoteEditor.maxLength", "scopeKind": "class"}, {"_type": "tag", "name": "NoteEditor", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-e77cf41c/notes_frontend/src/components/NoteEditor.js", "pattern": "/^export default function NoteEditor({ initialData = {}, onSave, onCancel, mode = \"edit\" }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ initialData = {}, onSave, onCancel, mode = \"edit\" })"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-e77cf41c/notes_frontend/src/components/NoteEditor.js", "pattern": "/^          value={content}$/", "language": "JavaScript", "kind": "field", "scope": "NoteEditor.value", "scopeKind": "class"}, {"_type": "tag", "name": "e", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-e77cf41c/notes_frontend/src/components/NoteEditor.js", "pattern": "/^          onChange={e => setContent(e.target.value)}$/", "language": "JavaScript", "kind": "property", "scope": "NoteEditor.onChange", "scopeKind": "class"}, {"_type": "tag", "name": "e", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-e77cf41c/notes_frontend/src/components/NoteEditor.js", "pattern": "/^          onChange={e => setTitle(e.target.value)}$/", "language": "JavaScript", "kind": "property", "scope": "NoteEditor.onChange", "scopeKind": "class"}, {"_type": "tag", "name": "onChange", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-e77cf41c/notes_frontend/src/components/NoteEditor.js", "pattern": "/^          onChange={e => setContent(e.target.value)}$/", "language": "JavaScript", "kind": "class", "scope": "NoteEditor", "scopeKind": "class"}, {"_type": "tag", "name": "onChange", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-e77cf41c/notes_frontend/src/components/NoteEditor.js", "pattern": "/^          onChange={e => setTitle(e.target.value)}$/", "language": "JavaScript", "kind": "class", "scope": "NoteEditor", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-e77cf41c/notes_frontend/src/components/NoteEditor.js", "pattern": "/^          value={title}$/", "language": "JavaScript", "kind": "field", "scope": "NoteEditor.value", "scopeKind": "class"}], "hash": "fc6d4aa6b358e9f4723920c5130e2429", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/components/NoteEditor.js", "fields": [{"name": "maxLength={80}", "scope": "NoteEditor.maxLength", "scopeKind": "class", "description": "unavailable"}, {"name": "value={content}", "scope": "NoteEditor.value", "scopeKind": "class", "description": "unavailable"}, {"name": "onChange={e => setContent(e.target.value)}", "scope": "NoteEditor.onChange", "scopeKind": "class", "description": "unavailable"}, {"name": "onChange={e => setTitle(e.target.value)}", "scope": "NoteEditor.onChange", "scopeKind": "class", "description": "unavailable"}, {"name": "value={title}", "scope": "NoteEditor.value", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"35": ""}]}